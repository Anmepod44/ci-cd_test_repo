name: Deploy to AWS ECR and CodeDeploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 120

    env:
      AWS_REGION: eu-north-1
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      ECR_REGISTRY: "${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.eu-north-1.amazonaws.com"
      ECR_REPOSITORY: "frontend-app"
      IMAGE_TAG: ${{ github.sha }}
      S3_BUCKET: "deployment-bckt-europe"
      CODE_DEPLOY_APPLICATION: "frontend-deploy"
      CODEDEPLOY_DEPLOYMENT_GROUP: "frontend-deploy-group"

    steps:
    - name: Checkout source code
      uses: actions/checkout@v2

    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Log in to Amazon ECR
      run: |
        aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY

    - name: Build Docker image
      run: |
        docker build -t $ECR_REPOSITORY:$IMAGE_TAG .

    - name: Tag Docker image
      run: |
        docker tag $ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Push Docker image to Amazon ECR
      run: |
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Save Image URI to File
      run: |
        echo "imageUri: ${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}" > imagedetails.json

    - name: Upload Image Details to S3
      run: |
        aws s3 cp imagedetails.json s3://$S3_BUCKET/imagedetails.json --region $AWS_REGION

    - name: Create Deployment in CodeDeploy
      id: create_deployment
      run: |
        DEPLOYMENT_ID=$(aws deploy create-deployment \
          --application-name $CODE_DEPLOY_APPLICATION \
          --deployment-group-name $CODEDEPLOY_DEPLOYMENT_GROUP \
          --revision "{\"revisionType\": \"S3\", \"s3Location\": {\"bucket\": \"$S3_BUCKET\", \"key\": \"imagedetails.json\", \"bundleType\": \"JSON\"}}" \
          --region $AWS_REGION \
          --query 'deploymentId' \
          --output text)
        echo "Deployment ID: $DEPLOYMENT_ID"
        echo "deployment_id=$DEPLOYMENT_ID" >> $GITHUB_OUTPUT

    - name: Wait for Deployment Completion
      run: |
        aws deploy wait deployment-successful \
          --deployment-id ${{ steps.create_deployment.outputs.deployment_id }} \
          --region $AWS_REGION
