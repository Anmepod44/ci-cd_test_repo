name: Push to AWS ECR and Trigger CodeDeploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 120

    env:
      AWS_REGION: eu-north-1
      ECR_REGISTRY: 038462779186.dkr.ecr.eu-north-1.amazonaws.com
      ECR_REPOSITORY: frontend-app
      IMAGE_TAG: ${{ github.sha }}
      CODEDEPLOY_DEPLOYMENT_GROUP: "frontend-deploy-group"
      CODE_DEPLOY_APPLICATION: "frontend-deploy"
      S3_BUCKET: "deployment-bckt-europe"

    steps:
    - name: Checkout source code
      uses: actions/checkout@v2

    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Log in to Amazon ECR
      run: |
        aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.ECR_REGISTRY }}

    - name: Build Docker image
      run: |
        docker build -t ${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }} .

    - name: Tag Docker image for ECR
      run: |
        docker tag ${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }} ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}

    - name: Push Docker image to Amazon ECR
      run: |
        docker push ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}

    - name: Upload Image Details to S3
      run: |
        echo "imageUri: ${env.ECR_REGISTRY}/${env.ECR_REPOSITORY}:${env.IMAGE_TAG}" > imagedetails.json
        aws s3 cp imagedetails.json s3://${{ env.S3_BUCKET }}/imagedetails.json --region ${{ env.AWS_REGION }}

    - name: Create Deployment in CodeDeploy
      id: create_deployment
      run: |
        DEPLOYMENT_ID=$(aws deploy create-deployment \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION }} \
          --deployment-group-name ${{ env.CODEDEPLOY_DEPLOYMENT_GROUP }} \
          --revision "{\"revisionType\": \"S3\", \"s3Location\": {\"bucket\": \"${{ env.S3_BUCKET }}\", \"key\": \"imagedetails.json\", \"bundleType\": \"JSON\"}}" \
          --region ${{ env.AWS_REGION }} \
          --query 'deploymentId' \
          --output text)
        echo "Deployment ID: $DEPLOYMENT_ID"
        echo "deployment_id=$DEPLOYMENT_ID" >> $GITHUB_OUTPUT

    - name: Wait for Deployment Completion
      run: |
        aws deploy wait deployment-successful \
          --deployment-id ${{ steps.create_deployment.outputs.deployment_id }} \
          --region ${{ env.AWS_REGION }}
